; This is the Calva REPL Window.
; It's just a file, really, with some special treatment from Calva.
; Use it as a REPL input prompt if you like. (When the REPL is connected.)
; TIPS: The keyboard shortcut `ctrl+alt+o r` shows and focuses this window
; Please see https://calva.io/repl-window/ for more info.
; Happy coding! ♥️

; TIPS: As with any Clojure file when the REPL is connected:
; - `alt+enter` evaluates the current top level form.
; - `ctrl+enter` evaluates the current form.
; Special for this file:
; - `alt+up` and `alt+down` traverse up and down the REPL command history
;    when the cursor is after the last contents at the prompt

PLEASE NOTE
We will update the default location of this file.
The new default location will be
  "<projectRootPath>/.calva/repl.calva-repl"
For now the legacy path is used by default.
To give yourself a smooth transition, you can opt in
to the change, by configuring this setting as false:
  "calva.useLegacyReplWindowPath"
and then add "**/.calva/repl.calva-repl" to your ".gitignore" file.


This file is configured as the output destination for all REPL output.
You can configure this with the setting:
  "calva.outputDestinations"


; Connecting using "Leiningen" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
;

; Starting Jack-in Terminal: pushd c:\Users\Estudiante\Documents\Code\Clojure\calc & cmd.exe /d /c lein update-in :dependencies conj [nrepl,"1.0.0"] -- update-in :plugins conj [cider/cider-nrepl,"0.28.5"] -- update-in [:repl-options,:nrepl-middleware] conj '["cider.nrepl/cider-middleware"]' -- repl :headless & popd
; Using host:port 127.0.0.1:49211 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
clj꞉calc.core꞉> 
"Please see https://calva.io/output/#about-stdout-in-the-repl-window
about why stdout printed to this file is prepended with `;` to be line comments."
clj꞉calc.core꞉> 
; Jack-in done.
clj꞉calc.core꞉> 
13
clj꞉calc.core꞉> 
5
clj꞉calc.core꞉> 
5
clj꞉calc.core꞉> 
; Execution error (ClassCastException) at calc.core/eval14095 (form-init5006608691150850646.clj:67).
; java.lang.String cannot be cast to clojure.lang.IFn
clj꞉calc.core꞉> 
"2+3"
clj꞉calc.core꞉> 
; Execution error (NumberFormatException) at calc.core/eval14097 (form-init5006608691150850646.clj:67).
; Invalid number: 2+3
clj꞉calc.core꞉> 
; Execution error (NumberFormatException) at calc.core/eval14099 (form-init5006608691150850646.clj:67).
; Invalid number: 2+3
clj꞉calc.core꞉> 
; Execution error (NumberFormatException) at calc.core/eval14101 (form-init5006608691150850646.clj:67).
; Invalid number: 2+3
clj꞉calc.core꞉> 
#function[clojure.lang.AFunction/1]
clj꞉calc.core꞉> 
#function[clojure.lang.AFunction/1]
clj꞉calc.core꞉> 
"clojure.lang.AFunction$1@79846cf7"
clj꞉calc.core꞉> 
"5"
clj꞉calc.core꞉> 
:btn1
clj꞉calc.core꞉> 
